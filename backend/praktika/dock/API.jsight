JSIGHT 0.3

INFO
  Title "Производственная практика 4 семестр"
  Version 1.0

#---------------------- /Authentification -----------------------

POST /auth           // Метод аутеннтификации пользователя
  Request @auth
  200 empty          // 1. Пользователь аутентифицирован корректно. 2. Пользователь ранее не существовал, создан корректно, аутентификация прошла успешно
  401 empty          // Ошибка аутентификации - невалидные данные
  500 empty          // Пользователь не может быть создан на сервере


#---------------------- /Subscribe -----------------------

POST /subscribe             // Метод подписки на пользователя
  Query "login=user_login"
  {
    "login": "user_login" // {type: "string"}
  }
  Request @user
  200 empty                // Пользователь корректно подписался на другого пользователя
  500 empty                // Ошибка подписки на пользователя


GET /subscribers              // Метод получения подписчиков
  Query "login=user_login"
  {
    "login": "user_login" // {type: "string"}
  }
  200 @subscribers           // Пользователь корректно получил подписчиков
  500 empty                  // Ошибка получения подписчиков


#---------------------- /Post -----------------------

POST /post             // Метод создания поста
  Query "login=user_login"
  {
    "login": "user_login" // {type: "string"}
  }
  Request @post
  200 empty                // Пост создан корректно
  500 empty                // Ошибка создания поста


PUT /post             // Метод редактирования поста
  Query "login=user_login&postId=post_id"
  {
    "login": "user_login", // {type: "string"}
    "postId": "post_id" // {type: "string"}
  }
  Request @post
  200 empty                // Пост отредактирован корректно
  500 empty                // Ошибка редактирования поста



DELETE /post             // Метод удаление поста
  Query "login=user_login&postId=post_id"
  {
    "login": "user_login", // {type: "string"}
    "postId": "post_id" // {type: "string"}
  }
  200 empty                // Пост удален корректно
  500 empty                // Ошибка удаления поста


GET /post              // Метод получения постов
//  Query "login=user_login"
//  {
//    "login": "user_login" // {type: "string"}
//  }
  Request @post_filter
  200 @posts           // посты получены корректно
  500 empty            // Ошибка получения постов


#---------------------- /Comments -----------------------

POST /comment             // Метод создания комментария
  Query "login=user_login
  {
    "login": "user_login" // {type: "string"}
  }
  Request @comment
  200 empty                // Комментарий создан корректно
  500 empty                // Ошибка создания комментария


GET /comment            // Метод получения комментариев
  Query "login=user_login&postId=post_id"
  {
    "login": "user_login", // {type: "string"}
    "postId": "post_id" // {type: "string"}
  }
  200 @comments        // Комментарии получены корректно
  500 empty            // Ошибка получения комментариев


#======================== TYPES ==========================

TYPE @auth // Модель пользователь
{
  "login": "user_login", // {optional: false}
  "password": "user_password" // {optional: false}
}

TYPE @user // Модель пользователь
{
  "login": "user_login" // {optional: false}
}

TYPE @subscribers // Модель подписчиков
{
  "subscribers": ["sbs_login_1", "sbs_login_2"]

}

TYPE @post // Модель поста
{
  "title": "title",
  "description": "description",
  "text": "text",
  "isPublic": "true/false",
  "tags": "{[tag1, tag2]}"
}

TYPE @post_filter // Модель фильтра для получения постов
{
  "isPublic": "true/false",
//  "tags": "{[tag1, tag2]}"   // решил пока фильтровать не по тегам
}

// переделать
TYPE @posts // Модель списка постов
{
  "posts": "[{arrayOfPosts With 'Id'}]"
}

TYPE @comment // Модель комментария
{
  "postId": "postId",
  "text": "text",
  "time": "time"
}

// Поправить на массив
TYPE @comments // Модель списка комментариев
{
  "login": "user_login",
  "text": "text",
  "time": "time"
}