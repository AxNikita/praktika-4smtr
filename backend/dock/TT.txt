#---------------------- Сущности FE-----------------------

Пользователь: login, password, subscribers.

Пост: login, id, title, description, text, isPublic (публичный или нет), tags (массив тегов)

Комментарий: text, postId, time


#---------------------- Ендпоинты -----------------------

1. POST Аутентификация - 1 ендпоинт

2. POST подписка на пользователя - 1 ендпоинт
3. GET Получение подписчиков - 1 ендпоинт

4. POST Создание поста - 1 ендпоинт
5. POST Редактирование поста - 1 ендпоинт
6. DELETE Удаление - 1 ендпоинт
7. GET Получение публичных постов (isPublic = true) = 1 ендпоинт
8. GET Получение публичных постов (isPublic = true) с фильтром по тегам (== tags) = 1 ендпоинт

9. POST Создание комментария к посту - 1 ендпоинт
10. GET Получение всех комментариев к посту - 1 ендпоинт


#---------------------- Обсуждение -----------------------

[Модель Пост] Предлагаю тэги сделать фиксированного списка, для упрощения. Типо Enum/кортеж.
              Потому что, если пользователь сам будет придумывать новые тэги - мы тут баги устанем отлавливать.
              А так у нас будет фиксированный список, отладим на малом кол-ве элементов, а потом я добавлю новые и дело в шляпе.
[Ответ Модель Пост] Согласен.
[Модель Пост] Добавил список фиксированный длины с заданными значениями, модель почти сформирована.
              Добавил в модель (бэкенд) поле login, чтобы связать посты с пользователем



[Модель Пользователь] Как тебе было бы удобно получать подписчиков?
                      Предполагаю, что это идентификаторы пользователей, тогда модель данных на фронт будет улетать легковесной.
                      Нежели, если в подписчиках буду выдавть всю информацию, хотя могу и так на самом деле.
                      От этого будет зависит кол-во эндпоинтов: либо один где я отдам тебе всю инфу по подписчикам,
                      либо 2 (сам пользователь, получение инфы по подписчикам по идентификаторам).
[Ответ Модель Пользователь] В ТЗ нет страницы подписчиков. Поэтому достаточно просто их айдишники в массиве,
                      чтобы я взял его длину и показал, что у пользователя столько-то подписчиков.
                      Если до тебя докапаются и скажут, мол, сделай страницу подписчиков, то это будет доделать просто исходя из айдишников в массиве.
[Модель Пользователь] В таком случае буду возвращать не "айдишники", а список логинов. Чтобы нам сойтись по терминологии и семантике.



[пункт 1] Зачем нам токены? Что если с фронта я буду просто получать логин и пароль (при регистрации/входе).
          Нас же не обязывают использовать токены (хотя я и понимаю важность), но ведь это фиктивное демо приложение.
          В случае если такого пользователя нет - я его создам у себя, если есть -
          проверю пару логин/пароль и в случае валидности отправлю ОК, ошибки - 403(условно), а ты отрисуешь что неверный пароль.
          Просто логин у себя в константу куда-нибудь писать, чтобы я понимал для какого пользака отдавать посты и вцелом данные
          Я просто пытаюсь максимально упростить весь механизм, хотя и может странно выглядеть.
          В таком случае, ендпоинт будет 1.
[Ответ Пункт 1] Не сильно понял, как мне в таком случае публиковать посты. С логином и паролем пользователя их отправлять каждый раз?
[Пункт 1] Решено создать один ендпоинт для аутентификации.
